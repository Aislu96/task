//Допустим, возьмем две строки, A и B, и определим сходство строк как длину самого длинного префикса, общего для обеих строк. Например, сходство строк abcи abdравно 2, а сходство строк aaaи aaabравно 3.
//
// напишите функцию, которая вычисляет сумму сходств строки S с каждым из ее суффиксов .
//
// Примеры (ввод -> вывод):
// 'ababaa' -> 11
// 'abc' -> 3
// Объяснение:
//
// В первом случае суффиксы строки — ababaa, babaa, abaa, baaи aa. aСходства каждой из этих строк со строкой ababaaравны 6,0,3,0,1,1 соответственно. Таким образом, ответ: 6 + 0 + 3 + 0 + 1 + 1 = 11.
//
// Во втором случае ответ просто 3 + 0 + 0 = 3.
//
// Примечание. В каждой строке будет хотя бы один символ — нет необходимости проверять пустые строки :)

function stringSuffix(s) {
    let num = 0;
    for (let i = 0; i < s.length; i++) {
        let n = s.slice(i);
        for (let j = 0; j < n.length; j++) {
            if (s[j] === n[j]) {
                num++;
            } else {
                break;
            }
        }
    }
    return num;
}


stringSuffix('aa');
stringSuffix('abc');
stringSuffix('ababaa');
stringSuffix('apple');
