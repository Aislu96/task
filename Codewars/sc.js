//Это простая версия серии Shortest Code. Если вам нужны испытания, попробуйте версию испытания.
//
// Задача:
// Даем вам числовой массив arr, и число n(n>=0), в соответствии с правилами ката, возвращает массив после nизменения времени.
//
// Правила: при каждом изменении, когда элемент массива имеет нечетное число, он изменяется на x*3+1(элемент — x) и объединяется со следующим элементом arr[i]+arr[i+1](i — индекс элемента, если это последний элемент массива, не объединяйте с другим элементом); когда элемент представляет собой четное число, измененное на x=x/2и разделенное на два элемента.
//
// Пример:
// arr=[3,4,5]
//     n=0: [3,4,5]
//     n=1: [14,16]
//     element1=>3*3+1==10, then merge element2, 10+4=14;
//     element2 merged by element1, so element2 disappeared;
//     element3=>5*3+1==16, no element merge
//     n=2: [7,7,8,8]
//     element1 split into 7,7; element1 split into 8,8;
//     n=3: [29,4,4,4,4]
//     n=4: [92,2,2,2,2,2,2]
//     n=5: [46,46,1,1,1,1,1,1,1,1,1,1,1,1]
//     n=6: [23,23,23,23,5,5,5,5,5,5]
//     n=... [...]


function sc(arr, n) {
    for (let j = 0; j < n; j++) {
        for (let i = 0; i < arr.length; i++) {
            if (arr[i] % 2 !== 0) {
                if (arr.length - 1 === i) {
                    arr.splice(i, 1, arr[i] * 3 + 1)
                } else {
                    arr.splice(i, 2, arr[i] * 3 + 1 + arr[i + 1])
                }
            } else {
                let m = arr[i] / 2;
                arr.splice(i, 1, m, m);
                i++;
            }
        }
    }
    return arr;

}

sc([3, 4, 5], 0);
sc([3, 4, 5], 1);
sc([3, 4, 5], 2);
sc([3, 4, 5], 3);
sc([3, 4, 5], 4);
sc([3, 4, 5], 5);
sc([3, 4, 5], 6);
sc([3, 4, 5], 7);
sc([3, 4, 5], 8);
